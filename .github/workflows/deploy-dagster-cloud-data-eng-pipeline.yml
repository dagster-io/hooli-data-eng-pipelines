name: Dagster Cloud Hybrid Deployment - Data Eng Pipeline
on:
  push: # For full deployment
    branches:
      - "main"
      - "master"
    paths:
      - hooli_data_eng/**
      - dbt_project/**
      - hooli_data_eng/**
      - pyproject.toml
      - Dockerfile
  pull_request:  # For branch deployments
    types: [opened, synchronize, reopened, closed]
    paths:
      - hooli_data_eng/**
      - dbt_project/**
      - hooli_data_eng/**
      - pyproject.toml
      - Dockerfile

concurrency:
  # Cancel in-progress deploys to the same branch
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  DAGSTER_CLOUD_ORGANIZATION: "hooli"
  DAGSTER_CLOUD_API_TOKEN: ${{ secrets.DAGSTER_CLOUD_API_TOKEN }}
  DAGSTER_PROJECT_DIR: "."
  DAGSTER_CLOUD_YAML_PATH: "dagster_cloud.yaml"
  IMAGE_REGISTRY: "764506304434.dkr.ecr.us-west-2.amazonaws.com/hooli-data-science-prod"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs: 
  dagster-cloud-deploy:
    runs-on: ubuntu-22.04
    steps:
      - name: Pre-run checks
        id: prerun
        uses: dagster-io/dagster-cloud-action/actions/utils/prerun@v0.1.47

      - name: Checkout
        uses: actions/checkout@v4
        if: steps.prerun.outputs.result != 'skip'
        with:
          ref: ${{ github.head_ref }}

      - name: Run Ruff
        uses: astral-sh/ruff-action@v3
        with:
          args: check --fix

      - name: Generate docker image tag
        id: generate-image-tag
        if: steps.prerun.outputs.result != 'skip'
        run: | 
          echo "IMAGE_TAG=$GITHUB_SHA-$GITHUB_RUN_ID-$GITHUB_RUN_ATTEMPT" >> $GITHUB_ENV && echo $IMAGE_TAG  

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-local-path: ".github/python_dependencies"

      - name: Install python dependencies
        run: | 
          uv venv
          source .venv/bin/activate
          uv pip install dagster-dbt dagster-cloud dbt-core dbt-duckdb "dbt-snowflake<=1.8.4" --upgrade;

      - name: Validate configuration
        id: ci-validate
        if: steps.prerun.outputs.result != 'skip'
        uses: dagster-io/dagster-cloud-action/actions/utils/dagster-cloud-cli@v0.1.47
        with:
          command: "ci check --project-dir ${{ env.DAGSTER_PROJECT_DIR }} --dagster-cloud-yaml-path ${{ env.DAGSTER_CLOUD_YAML_PATH }}"

      - name: Initialize build session
        id: ci-init
        if: steps.prerun.outputs.result != 'skip'
        uses: dagster-io/dagster-cloud-action/actions/utils/ci-init@v0.1.47
        with:
          project_dir: ${{ env.DAGSTER_PROJECT_DIR }}
          dagster_cloud_yaml_path: ${{ env.DAGSTER_CLOUD_YAML_PATH }}
          deployment: 'data-eng-prod'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        if: steps.prerun.outputs.result != 'skip'
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:  us-west-2

      - name: Login to ECR
        if: ${{ steps.prerun.outputs.result != 'skip' }}
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'true'

      - name: Set Prod Deployment Environment Variable for Push
        if: steps.prerun.outputs.result != 'skip' && github.event_name == 'push'
        run: echo "DAGSTER_CLOUD_DEPLOYMENT_NAME=data-eng-prod" >> $GITHUB_ENV

      - name: Prepare dbt project
        if: steps.prerun.outputs.result != 'skip'
        run: |
          source .venv/bin/activate
          dagster-dbt project prepare-and-package --file hooli_data_eng/project.py
          dagster-cloud ci dagster-dbt project manage-state --file hooli_data_eng/project.py --source-deployment data-eng-prod

      - name: Build and upload Docker image for data-eng-pipeline
        if: steps.prerun.outputs.result != 'skip'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_REGISTRY }}:${{ env.IMAGE_TAG }}-data-eng-pipeline

      - name: Build and upload Docker image for pipes example
        if: steps.prerun.outputs.result != 'skip'
        uses: docker/build-push-action@v5
        with:
          context: ./hooli_data_eng/utils/example_container
          push: true
          tags: ${{ env.IMAGE_REGISTRY }}:latest-pipes-example

      - name: Set build output for Dagster Cloud
        id: ci-set-build-output
        if: steps.prerun.outputs.result != 'skip'
        run: |
          source .venv/bin/activate
          dagster-cloud ci set-build-output --location-name data-eng-pipeline --image-tag=$IMAGE_TAG-data-eng-pipeline\n

      - name: Deploy to Dagster Cloud
        id: ci-deploy
        if: steps.prerun.outputs.result != 'skip'
        uses: dagster-io/dagster-cloud-action/actions/utils/dagster-cloud-cli@v0.1.47
        with:
         command: "ci deploy --location-name data-eng-pipeline"

      - name: Get branch deployment
        id: get-branch-deployment
        if: steps.prerun.outputs.result != 'skip' && github.event_name == 'pull_request'
        uses: dagster-io/dagster-cloud-action/actions/utils/get_branch_deployment@v0.1
        with:
          organization_id: 'hooli'

      - name: Update PR comment for branch deployments
        id: ci-notify
        if: steps.prerun.outputs.result != 'skip' && always()
        uses: dagster-io/dagster-cloud-action/actions/utils/dagster-cloud-cli@v0.1.47
        with:
          command: "ci notify --project-dir=${{ env.DAGSTER_PROJECT_DIR }}"

      - name: Generate summary
        id: ci-summary
        if: steps.prerun.outputs.result != 'skip' && always()
        uses: dagster-io/dagster-cloud-action/actions/utils/dagster-cloud-cli@v0.1.47
        with:
          command: "ci status --output-format=markdown >> $GITHUB_STEP_SUMMARY"
