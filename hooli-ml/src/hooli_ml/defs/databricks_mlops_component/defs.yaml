type: hooli_ml.components.DatabricksMultiNotebookJobComponent
template_vars_module: .template_vars


attributes:
  job_name_prefix: databricks_mlops_pipeline
  serverless: true
  tasks:
    - task_key: batch_inference_job
      asset_specs:
        - key: batch_inference_job
          description: batch_inference_job from batch_inference_job job (notebook
            task)
          kinds:
            - databricks
            - notebook
          deps:
            - pickup_features
            - dropoff_features
            - model_deployment
      notebook_path: /Users/{{ workspace_user }}/.bundle/{{ bundle_name }}/{{ env
        }}/files/deployment/batch_inference/notebooks/BatchInference
      parameters:
        env: '{{ env }}'
        input_table_name: '{{ env }}.databricks_mlops.feature_store_inference_input'
        output_table_name: '{{ catalog_name }}.databricks_mlops.predictions'
        model_name: '{{ catalog_name }}.databricks_mlops.{{ model_name }}'
        git_source_info: url:{{ bundle_git_origin_url }}; branch:{{ bundle_git_branch
          }}; commit:{{ bundle_git_commit }}
    - task_key: Train
      asset_specs:
        - key: train
          description: Train from model_training_job job (notebook task)
          kinds:
            - databricks
            - notebook
          deps:
            - pickup_features
            - dropoff_features
      notebook_path: /Users/{{ workspace_user }}/.bundle/{{ bundle_name }}/{{ env
        }}/files/training/notebooks/TrainWithFeatureStore
      parameters:
        env: '{{ env }}'
        training_data_path: /databricks-datasets/nyctaxi-with-zipcodes/subsampled
        experiment_name: '{{ experiment_name }}'
        model_name: '{{ catalog_name }}.databricks_mlops.{{ model_name }}'
        pickup_features_table: '{{ catalog_name }}.databricks_mlops.trip_pickup_features'
        dropoff_features_table: '{{ catalog_name }}.databricks_mlops.trip_dropoff_features'
        git_source_info: url:{{ bundle_git_origin_url }}; branch:{{ bundle_git_branch
          }}; commit:{{ bundle_git_commit }}
    - task_key: ModelValidation
      asset_specs:
        - key: model_validation
          description: ModelValidation from model_training_job job (notebook task)
          kinds:
            - databricks
            - notebook
          deps:
            - train
      notebook_path: /Users/{{ workspace_user }}/.bundle/{{ bundle_name }}/{{ env
        }}/files/validation/notebooks/ModelValidation
      parameters:
        experiment_name: '{{ experiment_name }}'
        run_mode: dry_run
        enable_baseline_comparison: 'false'
        validation_input: SELECT * FROM delta.`dbfs:/databricks-datasets/nyctaxi-with-zipcodes/subsampled`
        model_type: regressor
        targets: fare_amount
        custom_metrics_loader_function: custom_metrics
        validation_thresholds_loader_function: validation_thresholds
        evaluator_config_loader_function: evaluator_config
        git_source_info: url:{{ bundle_git_origin_url }}; branch:{{ bundle_git_branch
          }}; commit:{{ bundle_git_commit }}
    - task_key: ModelDeployment
      asset_specs:
        - key: model_deployment
          description: ModelDeployment from model_training_job job (notebook task)
          kinds:
            - databricks
            - notebook
          deps:
            - model_validation
      notebook_path: /Users/{{ workspace_user }}/.bundle/{{ bundle_name }}/{{ env
        }}/files/deployment/model_deployment/notebooks/ModelDeployment
      parameters:
        env: '{{ env }}'
        git_source_info: url:{{ bundle_git_origin_url }}; branch:{{ bundle_git_branch
          }}; commit:{{ bundle_git_commit }}
    - task_key: PickupFeatures
      asset_specs:
        - key: pickup_features
          description: PickupFeatures from write_feature_table_job job (notebook task)
          kinds:
            - databricks
            - notebook
      notebook_path: /Users/{{ workspace_user }}/.bundle/{{ bundle_name }}/{{ env
        }}/files/feature_engineering/notebooks/GenerateAndWriteFeatures
      parameters:
        input_table_path: /databricks-datasets/nyctaxi-with-zipcodes/subsampled
        input_start_date: ''
        input_end_date: ''
        timestamp_column: tpep_pickup_datetime
        output_table_name: '{{ catalog_name }}.databricks_mlops.trip_pickup_features'
        features_transform_module: pickup_features
        primary_keys: zip
        git_source_info: url:{{ bundle_git_origin_url }}; branch:{{ bundle_git_branch
          }}; commit:{{ bundle_git_commit }}
    - task_key: DropoffFeatures
      asset_specs:
        - key: dropoff_features
          description: DropoffFeatures from write_feature_table_job job (notebook
            task)
          kinds:
            - databricks
            - notebook
      notebook_path: /Users/{{ workspace_user }}/.bundle/{{ bundle_name }}/{{ env
        }}/files/feature_engineering/notebooks/GenerateAndWriteFeatures
      parameters:
        input_table_path: /databricks-datasets/nyctaxi-with-zipcodes/subsampled
        input_start_date: ''
        input_end_date: ''
        timestamp_column: tpep_dropoff_datetime
        output_table_name: '{{ catalog_name }}.databricks_mlops.trip_dropoff_features'
        features_transform_module: dropoff_features
        primary_keys: zip
        git_source_info: url:{{ bundle_git_origin_url }}; branch:{{ bundle_git_branch
          }}; commit:{{ bundle_git_commit }}
    - task_key: monitored_metric_violation_check
      asset_specs:
        - key: monitored_metric_violation_check
          description: monitored_metric_violation_check from retraining_job job (notebook
            task)
          kinds:
            - databricks
            - notebook
          deps:
            - model_deployment
      notebook_path: /Users/{{ workspace_user }}/.bundle/{{ bundle_name }}/{{ env
        }}/files/monitoring/notebooks/MonitoredMetricViolationCheck
      parameters:
        env: '{{ env }}'
        table_name_under_monitor: "{{ env }}.databricks_mlops.predictions"
        metric_to_monitor: root_mean_squared_error
        metric_violation_threshold: 100
        num_evaluation_windows: 5
        num_violation_windows: 2
        git_source_info: url:{{ bundle_git_origin_url }}; branch:{{ bundle_git_branch
          }}; commit:{{ bundle_git_commit }}
    - task_key: is_metric_violated
      asset_specs:
        - key: is_metric_violated
          description: is_metric_violated from retraining_job job (condition task)
          kinds:
            - databricks
            - condition
          deps:
            - monitored_metric_violation_check
      condition_task:
        op: EQUAL_TO
        left: '{{ databricks_task_value("tasks.monitored_metric_violation_check.values.is_metric_violated")
          }}'
        right: 'true'
    - task_key: trigger_retraining
      asset_specs:
        - key: trigger_retraining
          description: trigger_retraining from retraining_job job (job task)
          kinds:
            - databricks
            - job
          deps:
            - is_metric_violated
      depends_on:
        - task_key: is_metric_violated
          outcome: 'true'
      job_id: 1047061115106673
