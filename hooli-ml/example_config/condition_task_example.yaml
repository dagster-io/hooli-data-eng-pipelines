# Test YAML for condition_task support
type: hooli_ml.components.DatabricksMultiNotebookJobComponent
template_vars_module: .template_vars

job_name_prefix: "condition_test_pipeline"
serverless: true
tasks:
  # Step 1: Run a monitoring check notebook
  - task_key: "metric_violation_check"
    notebook_path: "/Users/{{ workspace_user }}/.bundle/{{ bundle_name }}/{{ env }}/files/monitoring/check_metrics"
    asset_specs:
      - key: "metric_check_result"
        description: "Model metric violation check result"
        kinds: ["databricks", "notebook", "monitoring"]
    parameters:
      model_name: "{{ model_name }}"
      threshold: 0.1

  # Step 2: Condition task that checks if retraining is needed
  - task_key: "is_retraining_needed"
    condition_task:
      op: "EQUAL_TO"
      left: "{{tasks.metric_violation_check.values.needs_retraining}}"
      right: "true"
    asset_specs:
      - key: "retraining_decision"
        description: "Decision on whether retraining is needed"
        kinds: ["databricks", "condition", "decision"]
        deps: ["metric_check_result"]

  # Step 3: Conditional retraining job (only runs if condition is true)
  - task_key: "conditional_retraining"
    job_id: 987654321  # Existing training job ID
    job_parameters:
      model_name: "{{ model_name }}"
      experiment_name: "{{ experiment_name }}"
      trigger_reason: "metric_violation"
    asset_specs:
      - key: "retrained_model"
        description: "Conditionally retrained model"
        kinds: ["databricks", "job", "ml"]
        deps: ["retraining_decision"]
    parameters:
      catalog: "{{ catalog_name }}"
